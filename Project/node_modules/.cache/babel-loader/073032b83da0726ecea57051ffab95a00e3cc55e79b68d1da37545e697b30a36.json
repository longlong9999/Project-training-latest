{"ast":null,"code":"import _slicedToArray from \"C:/Source Training React/Project training/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Source Training React\\\\Project training\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PostsList from \"./components/PostsList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport useHttp from \"./hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    movie = _useState4[0],\n    setMovie = _useState4[1];\n  var transformPosts = function transformPosts(postsObj) {\n    var loadedPosts = [];\n    for (var key in postsObj) {\n      loadedPosts.push({\n        id: key,\n        title: postsObj[key].title,\n        openingText: postsObj[key].openingText,\n        releaseDate: postsObj[key].releaseDate\n      });\n    }\n    setPosts(loadedPosts);\n  };\n  var _useHttp = useHttp({\n      url: \"https://react-http-5af7d-default-rtdb.firebaseio.com/movies.json\",\n      method: \"GET\"\n    }, transformMovies),\n    isLoading = _useHttp.isLoading,\n    error = _useHttp.error,\n    fetchMovies = _useHttp.fetchMoviesHandler;\n  useEffect(function () {\n    fetchMovies();\n  }, []);\n  var _useHttp2 = useHttp({\n      url: \"https://react-http-5af7d-default-rtdb.firebaseio.com/movies.json\",\n      method: \"POST\",\n      body: movie\n    }),\n    addMovieHandler = _useHttp2.fetchMoviesHandler;\n\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch(\n  //     \"https://react-http-5af7d-default-rtdb.firebaseio.com/movies.json\",\n  //     {\n  //       method: \"POST\",\n  //       body: JSON.stringify(movie),\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     }\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  var content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this);\n  }\n  var handleAddMovie = function handleAddMovie(movie) {\n    setMovie(movie);\n    addMovieHandler();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: handleAddMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iRYUfo3Kqi1bgNHW1Ox4QL1ksb8=\", false, function () {\n  return [useHttp, useHttp];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","PostsList","AddMovie","useHttp","jsxDEV","_jsxDEV","App","_s","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","movie","setMovie","transformPosts","postsObj","loadedPosts","key","push","id","title","openingText","releaseDate","_useHttp","url","method","transformMovies","isLoading","error","fetchMovies","fetchMoviesHandler","_useHttp2","body","addMovieHandler","content","children","fileName","_jsxFileName","lineNumber","columnNumber","movies","length","MoviesList","handleAddMovie","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["C:/Source Training React/Project training/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport PostsList from \"./components/PostsList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport useHttp from \"./hooks/use-http\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [movie, setMovie] = useState(null);\n\n  const transformPosts = (postsObj) => {\n    const loadedPosts = [];\n\n    for (const key in postsObj) {\n      loadedPosts.push({\n        id: key,\n        title: postsObj[key].title,\n        openingText: postsObj[key].openingText,\n        releaseDate: postsObj[key].releaseDate\n      });\n    }\n\n    setPosts(loadedPosts);\n  };\n  const { isLoading, error, fetchMoviesHandler: fetchMovies } = useHttp(\n    {\n      url: \"https://react-http-5af7d-default-rtdb.firebaseio.com/movies.json\",\n      method: \"GET\"\n    },\n    transformMovies\n  );\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const { fetchMoviesHandler: addMovieHandler } = useHttp({\n    url: \"https://react-http-5af7d-default-rtdb.firebaseio.com/movies.json\",\n    method: \"POST\",\n    body: movie\n  });\n\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch(\n  //     \"https://react-http-5af7d-default-rtdb.firebaseio.com/movies.json\",\n  //     {\n  //       method: \"POST\",\n  //       body: JSON.stringify(movie),\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     }\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  const handleAddMovie = (movie) => {\n    setMovie(movie);\n    addMovieHandler();\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={handleAddMovie} />\n      </section>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}