{"ast":null,"code":"import _slicedToArray from \"C:/Source Training React/Project training/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Source Training React\\\\Project training\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PostsList from \"./components/PostsList\";\nimport AddPost from \"./components/AddPost\";\nimport \"./App.css\";\nimport useHttp from \"./hooks/use-http\";\nimport CreatePost from \"./components/CreatePost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    post = _useState4[0],\n    setPost = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    createPost = _useState6[0],\n    setPageCreate = _useState6[1];\n\n  // useEffect(() => {\n\n  //   if (createPost) {\n  //     setPageCreate(true);\n  //   }\n  // });\n\n  var handleChangePage = function handleChangePage(page) {\n    return setPageCreate(page);\n  };\n  var transformPosts = function transformPosts(postsObj) {\n    console.log('postsObj', postsObj.content);\n    var loadedPosts = [];\n    for (var key in postsObj.content) {\n      loadedPosts.push({\n        id: key,\n        title: postsObj.content[key].title,\n        description: postsObj.content[key].description,\n        content: postsObj.content[key].content\n      });\n    }\n    setPosts(loadedPosts);\n  };\n  var _useHttp = useHttp({\n      url: \"http://localhost:8080/api/v1/posts\",\n      method: \"GET\"\n    }, transformPosts),\n    isLoading = _useHttp.isLoading,\n    error = _useHttp.error,\n    fetchPosts = _useHttp.fetchPostsHandler;\n  useEffect(function () {\n    fetchPosts();\n  }, []);\n  var _useHttp2 = useHttp({\n      url: \"http://localhost:8080/api/v1/posts\",\n      method: \"POST\",\n      body: post\n    }),\n    addPostHandler = _useHttp2.fetchPostsHandler;\n\n  // async function addPostHandler(post) {\n  //   const response = await fetch(\n  //     \"https://react-http-5af7d-default-rtdb.firebaseio.com/posts.json\",\n  //     {\n  //       method: \"POST\",\n  //       body: JSON.stringify(post),\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     }\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  var content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no posts.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 17\n  }, this);\n  if (posts.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(PostsList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this);\n  }\n  var handleAddPost = function handleAddPost(post) {\n    setPost(post);\n    addPostHandler();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPosts,\n        children: \"Fetch Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: createPost ? /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(PostsList, {\n        posts: posts,\n        onChangePage: handleChangePage,\n        tt: \"props tt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CI2y95tVaHqU+s4VDuLQfYwLJQ4=\", false, function () {\n  return [useHttp, useHttp];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","PostsList","AddPost","useHttp","CreatePost","jsxDEV","_jsxDEV","App","_s","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","post","setPost","_useState5","_useState6","createPost","setPageCreate","handleChangePage","page","transformPosts","postsObj","console","log","content","loadedPosts","key","push","id","title","description","_useHttp","url","method","isLoading","error","fetchPosts","fetchPostsHandler","_useHttp2","body","addPostHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","length","handleAddPost","Fragment","onClick","onChangePage","tt","_c","$RefreshReg$"],"sources":["C:/Source Training React/Project training/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport PostsList from \"./components/PostsList\";\nimport AddPost from \"./components/AddPost\";\nimport \"./App.css\";\nimport useHttp from \"./hooks/use-http\";\nimport CreatePost from \"./components/CreatePost\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState(null);\n\n  const [createPost, setPageCreate] = useState(false);\n\n  // useEffect(() => {\n    \n  //   if (createPost) {\n  //     setPageCreate(true);\n  //   }\n  // });\n\n  const handleChangePage = (page) => setPageCreate(page);\n\n  const transformPosts = (postsObj) => {\n    console.log('postsObj', postsObj.content);\n    const loadedPosts = [];\n\n    for (const key in postsObj.content) {\n      loadedPosts.push({\n        id: key,\n        title: postsObj.content[key].title,\n        description: postsObj.content[key].description,\n        content: postsObj.content[key].content,\n\n      });\n    }\n\n    setPosts(loadedPosts);\n  };\n  const { isLoading, error, fetchPostsHandler: fetchPosts } = useHttp(\n    {\n      url: \"http://localhost:8080/api/v1/posts\",\n      method: \"GET\"\n    },\n    transformPosts\n  );\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const { fetchPostsHandler: addPostHandler } = useHttp({\n    url: \"http://localhost:8080/api/v1/posts\",\n    method: \"POST\",\n    body: post\n  });\n\n  // async function addPostHandler(post) {\n  //   const response = await fetch(\n  //     \"https://react-http-5af7d-default-rtdb.firebaseio.com/posts.json\",\n  //     {\n  //       method: \"POST\",\n  //       body: JSON.stringify(post),\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     }\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  let content = <p>Found no posts.</p>;\n\n  if (posts.length > 0) {\n    content = <PostsList posts={posts} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  const handleAddPost = (post) => {\n    setPost(post);\n    addPostHandler();\n  };\n\n  return (\n    <React.Fragment>\n      {/* <section>\n        <AddPost onAddPost={handleAddPost} />\n      </section> */}\n      <section>\n        <button onClick={fetchPosts}>Fetch Posts</button>\n      </section>\n      <section>{content}</section>\n    \n      <section>\n        {createPost ? <CreatePost/> : <PostsList posts={posts} onChangePage={handleChangePage} tt={\"props tt\"} />}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}